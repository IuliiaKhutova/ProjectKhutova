# 1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
# который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц вы найдете в методичке.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса
# Matrix (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент
# первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.

class Matrix:
    def __init__(self,*args):
        self.list1 = args[0]
        self.list2 = args[1]
        self.list3 = args[2]
        self.matrix = [self.list1,self.list2,self.list3]
        print(self.matrix)
    def __str__(self):
        return str('\n'.join([' '.join([str(j) for j in i]) for i in self.matrix]))
    def __add__(self, other):
        new_list = []
        for i,j in enumerate(self.matrix):
            new_list.append(list(map(sum,list(zip(self.matrix[i],other.matrix[i])))))
        return str('\n'.join([' '.join([str(j) for j in i]) for i in new_list]))
m=Matrix([1,2,3],[4,5,6],[0,1,8])
m_other=Matrix([9,1,2],[2,2,2],[4,5,2])
print(m)
print(m+m_other)


# пока складываю одноразмерные матрицы
